version: 2.1

commands:
  initialise-terraform:
    parameters:
      application:
        type: string
    steps:
      - checkout
      - run: |
          apk --update add -q --no-progress --no-cache curl curl-dev jq
          for keyEqualsValueString in $(curl -sSf \
          -H "Authorization:Bearer $HEROKU_API_KEY" \
          -H "Accept:application/vnd.heroku+json; version=3" \
          https://api.heroku.com/apps/departure-infra-backend/config-vars \
          | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]"); \
          do export $keyEqualsValueString; done
          cd applications/<< parameters.application >>
          terraform init -input=false -backend-config="conn_str=$DATABASE_URL" -upgrade

executors:
  terraform:
    docker:
      - image: hashicorp/terraform:1.3.6

parameters:
  application:
    type: string
    default: ""
  commit-hash:
    type: string
    default: ""
  job:
    type: string
    default: ""

jobs:
  apply-terraform:
    executor: terraform
    parameters:
      application:
        type: string
      commit-hash:
        type: string
    steps:
      - initialise-terraform:
          application: << parameters.application >>
      - run: |
          cd applications/<< parameters.application >>
          terraform apply -input=false -auto-approve -var="commit_hash=<< parameters.commit-hash >>"
  plan-terraform:
    executor: terraform
    parameters:
      application:
        type: string
      commit-hash:
        type: string
    steps:
      - initialise-terraform:
          application: << parameters.application >>
      - run: |
          cd applications/<< parameters.application >>
          terraform plan -input=false -var="commit_hash=<< parameters.commit-hash >>"

workflows:
  apply-terraform:
    when:
      and:
        - or:
            - equal: [ departure-api, << pipeline.parameters.application >> ]
            - equal: [ departure-app, << pipeline.parameters.application >> ]
        - << pipeline.parameters.commit-hash >>
        - equal: [ apply, << pipeline.parameters.job >> ]
    jobs:
      - apply-terraform:
          commit-hash: << pipeline.parameters.commit-hash >>
          application: << pipeline.parameters.application >>
          filters:
            branches:
              only: master
  plan-terraform:
    when:
      and:
        - or:
            - equal: [ departure-api, << pipeline.parameters.application >> ]
            - equal: [ departure-app, << pipeline.parameters.application >> ]
        - << pipeline.parameters.commit-hash >>
        - equal: [ plan, << pipeline.parameters.job >> ]
    jobs:
      - plan-terraform:
          commit-hash: << pipeline.parameters.commit-hash >>
          application: << pipeline.parameters.application >>
          filters:
            branches:
              only: master